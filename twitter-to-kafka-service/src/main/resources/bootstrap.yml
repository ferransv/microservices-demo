#We then need to add a bootstrap yaml file here to set up *spring cloud properties*, as the fetching
#of configuration from config server **should be before loading the application configuration (application.yml)**.

#This 'config-client' here is important because we use this prefix in the configuration files of config server repository.
#So if you look at the config-server-repository directory, you will see a file, config-client-twitter_to_kafka.
spring:
  application:
    name: twitter-to-kafka-service
  profiles:
    active: twitter_to_kafka
  cloud:
    config:
      name: twitter-to-kafka-service,config-client #That means we want to get the data from
        #that configuration file for Twitter-to-Kafka-service
        #(concretely from the config-server-repository directory)
        # to check if we can get the configuration properties
        #stored in the the config-server service
      #!!We acces to the secured config server using this user / password(which was encrypted or cyphered
      #via command line with JCE using the encrypt key, and the real password, to then generate the cyphered password beneath)
      username: spring_cloud_user
      password: '{cipher}945a5baab826360f5606afc2eccacef17944ee900c2f2a69593b5e3850575439e79ad4e607445effd6f9533b9085871d'