#The bootstrap yaml files are loaded, like thie one, by a parent spring application context, so it will be loaded before
#application yaml file. And for the spring cloud, we need to set bootstrap phase configurations in this
#  file, **because this bootstrap yaml file will be used to obtain the application configuration from the
#  config server repository** prior to loading application yaml file.

#  This file tells the Spring Cloud Config service what port to listen in on, the
#  application name, the application profiles, and the location where we will store the
#  configuration data.
spring:
  application:
    name: configserver
  cloud:
    config:
      server:
        git:
          #We set the file path of the config server repository in this Uri definition.
          uri: https://github.com/ferransv/config-server-repository
          username: ferransv
          password: '{cipher}a0b6146ebf31c370a734e28ae3d70b4db71ae132d02501c153bb4cee12d377062e6204e1f0f4e2943b40d824f132b08c856ec42f1fc400618ae37cd7a5471d11'
          #Configuration servers clones the config-server-repository in git on the start up
          clone-on-start: true
          default-label: master #def. label in github
    #If config server cannot reach to config server repository and load the configuration it will stop inmediatelly
      fail-fast: true
    #!!We acces to the secured config server using this user / password(which was encrypted or cyphered
    #via command line with JCE using the encrypt key, and the real password, to then generate the cyphered password beneath)
  security:
    user:
      name: spring_cloud_user
      password: '{cipher}5c2d5a57abb55162ac20ee79f7c15855284c8bdb4963f173014addab3440729fd731e936e9f1198e94cf054d7902ac18'

