#The bootstrap yaml files are loaded, like thie one, by a parent spring application context, so it will be loaded before
#application yaml file. And for the spring cloud, we need to set bootstrap phase configurations in this
#  file, **because this bootstrap yaml file will be used to obtain the application configuration from the
#  config server repository** prior to loading application yaml file.

#  This file tells the Spring Cloud Config service what port to listen in on, the
#  application name, the application profiles, and the location where we will store the
#  configuration data.
spring:
  application:
    name: configserver
  cloud:
    config:
      server:
        git:
          #We set the file path of the config server repository in this Uri definition.
#          uri: file:///C:/projects/repos/microservices-demo/config-server-repository
          uri: https://github.com/ferransv/config-server-repository
          #GitHub user/password
          username: ferransv
#          password: ENC(XXXX !To be generated through jce encryption with the key ENCRYPT_KEY=Demo_Pwd!2020 XXXXXXX)
          #TODO generate it via sdkman
          password: ***
          clone-on-start: true
          default-label: master #def. label in github
    #If config server cannot reach to config server repository and load the configuration it will stop inmediatelly
    fail-fast: true

    #This the user / password(it is encrypted or cyphered), through which we are going to secure the access to the config-server
  security:
    user:
      name: spring_cloud_user
      password: '{cipher}c0d85293cb01a46b3b629a12e5620f4e9d00d4ede8bdf248cf5b83e23f4536501e4b34a8d56b7a34fcee17aa01d05330'

#  pass this key when the application starts through env var
#  encrypt:
#    key: 'Demo_Pwd!2020'
