#analogously leave it empty, only if it is running in a container(if it is not running will fail to get the configuration fron the config-server)!!
#  because we should take normally the properties from the config-client-Kafka_to_elastic.yaml file in config server.#
#In this file, we will set our configuration properties for the Kafka-to-elastic CONSUMER service, which override the config server ones.
#server:
#  port: 8182
#
#kafka-config:
#  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
#  schema-registry-url-key: schema.registry.url
#  schema-registry-url: http://localhost:8081
#  topic-name: twitter-topic
#  topic-names-to-create:
#    - twitter-topic
#
##  Kafka consumer config data
#kafka-consumer-config:
#  key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
#  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
#  consumer-group-id: twitter-topic-consumer
#  auto-offset-reset: earliest
#  specific-avro-reader-key: specific.avro.reader
#  specific-avro-reader: true
#  batch-listener: true
#  auto-startup: false
#  concurrency-level: 3
#  session-timeout-ms: 10000
#  heartbeat-interval-ms: 3000
#  max-poll-interval-ms: 300000
#  max-poll-records: 500
#  max-partition-fetch-bytes-default: 1048576
#  max-partition-fetch-bytes-boost-factor: 1
#  poll-timeout-ms: 150
#
##Retry policy as we did with the configuration twitter-to-kafka
#retry-config:
#  initial-interval-ms: 1000
#  max-interval-ms: 10000
#  multiplier: 2.0
#  maxAttempts: 3
#  sleep-time-ms: 2000
#
#elastic-config:
#  index-name: twitter-index
#  connection-url: http://localhost:9200
#  connect-timeout-ms: 5000
#  socket-timeout-ms: 30000
#  is-repository: true
##  is-repository: false